#################################################
# ----- Schema Registry as a Kafka Client ----- #
#################################################

# All Kafka related configs are prefixed with "kafkastore."

# Internal Kafka Topic used to store schemas
kafkastore.topic = _schemas
# Group ID used for SR hosts to act as a consumer group
# Also used by MDS as --schema-registry-cluster-id
schema.registry.group.id=schema-registry

# Connect to Kafka's token listener for token impersonation
kafkastore.bootstrap.servers = SASL_SSL://kafka:9095
kafkastore.sasl.mechanism = OAUTHBEARER
kafkastore.security.protocol = SASL_SSL
kafkastore.sasl.login.callback.handler.class=io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
kafkastore.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
    username="schema-registry" \
    password="schema-registry-secret" \
    metadataServerUrls="https://mds:8090";

# ----- TLS Transport Encryption ----- #

# Schema Registry needs to trust Kafka's certificate
kafkastore.ssl.truststore.location = /home/training/rbac/security/tls/kafka-client/kafka-client.truststore.jks
kafkastore.ssl.truststore.password = confluent



####################################################
# ----- Schema Registry as a RESTful Service ----- #
####################################################

listeners = http://schema-registry:8081

# Enable to get more info from failed requests
debug = true

# ----- REST Client Authentication ----- #

# Jetty is recommended over BASIC when using RBAC
confluent.schema.registry.auth.mechanism=JETTY_AUTH

# ----- TLS Transport Encryption (HTTPS) ----- #

# ssl.keystore.location=~/rbac/security/tls/schema-registry/schema-registry.keystore.p12
# ssl.keystore.type=PKCS12
# ssl.keystore.password=confluent
# ssl.key.password=confluent    



####################
# ----- RBAC ----- #
####################

# ----- Connect to Metadata Service (MDS) ----- #

confluent.metadata.bootstrap.server.urls=https://mds:8090

# ----- Enable Token Impersonation for REST clients ----- #

# Activate a few security classes
schema.registry.resource.extension.class=io.confluent.kafka.schemaregistry.security.SchemaRegistrySecurityResourceExtension
confluent.schema.registry.authorizer.class=io.confluent.kafka.schemaregistry.security.authorizer.rbac.RbacAuthorizer
rest.servlet.initializor.classes=io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler

# Authenticate Schema Registry to MDS with Basic Auth
confluent.metadata.http.auth.credentials.provider=BASIC
confluent.metadata.basic.auth.user.info=schema-registry:schema-registry-secret

# MDS public key needed to verify json web tokens received from MDS
public.key.path=~/rbac/security/token/public.pem

# ----- TLS Transport Encryption ----- #

# Schema Registry needs to trust the MDS certificate
ssl.truststore.location = /home/training/rbac/security/tls/kafka-client/kafka-client.truststore.jks
ssl.truststore.password = confluent


#############################
# ----- Miscellaneous ----- #
#############################

# These configurations are not the focus of these training materials.