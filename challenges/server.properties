######################## Your Challenge ########################
# There are several sections marked by '# ----- Section ------ #'.
# The sections do not match the properties underneath them.
# The properties are correctly grouped together, but underneath the wrong section.
# Cut and paste the properties underneath to the proper section.
# Ignore the section called '# ----- Miscellaneous ----- #'.
# One of the sections will be blank. This is normal.
# For copious comments and explainations, see /home/training/rbac/cp-properties/server.properties.



# ----- Define Listeners ----- #

ldap.java.naming.provider.url = ldaps://directory-service:10636
ldap.java.naming.security.principal=uid=admin,ou=system
ldap.java.naming.security.credentials=secret
ldap.java.naming.security.authentication=simple
ldap.user.search.base=ou=users,dc=confluent,dc=io
ldap.user.name.attribute=uid
ldap.user.object.class=inetOrgPerson
ldap.search.mode=GROUPS
ldap.group.search.base=ou=groups,dc=confluent,dc=io
ldap.group.object.class=groupOfNames
ldap.group.name.attribute=cn
ldap.group.member.attribute=member
ldap.group.member.attribute.pattern=cn=(.*),ou=users,dc=confluent,dc=io



# ----- Identity (LDAP in this case) ----- #

inter.broker.listener.name=INTERNAL
sasl.mechanism.inter.broker.protocol=PLAIN
listener.name.internal.sasl.enabled.mechanisms=PLAIN
listener.name.internal.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
    username="kafka" \
    password="kafka-secret" \
    user_kafka="kafka-secret" \
    user_mds="mds-secret";



# ----- Simple Authentication and Security Layer (SASL) ----- #

listeners = CLIENT://kafka:9093,INTERNAL://kafka:9094,TOKEN://kafka:9095
listener.security.protocol.map = CLIENT:SASL_SSL,INTERNAL:SASL_SSL,TOKEN:SASL_SSL
confluent.metadata.server.listeners = https://mds:8090



# ----- Kafka Client Authentication ----- #

listener.name.client.sasl.enabled.mechanisms=PLAIN
listener.name.client.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required;
listener.name.client.plain.sasl.server.callback.handler.class=io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler



# ----- Internal Broker to Broker Authentication ----- #

confluent.metadata.server.authentication.method=BEARER
listener.name.token.sasl.enabled.mechanisms=OAUTHBEARER
listener.name.token.oauthbearer.sasl.server.callback.handler.class=io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
listener.name.token.oauthbearer.sasl.login.callback.handler.class=io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
listener.name.token.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
    publicKeyPath="/home/training/rbac/security/public.pem";
confluent.metadata.server.token.key.path=/home/training/rbac/security/tokenKeypair.pem



# ----- Broker to ZooKeeper Authentication ----- #

sasl.enabled.mechanisms=PLAIN,OAUTHBEARER



# ----- Kafka Client Authorization ----- #

ssl.keystore.location=/home/training/rbac/security/tls/kafka/kafka.keystore.p12
ssl.keystore.type=PKCS12
ssl.keystore.password=confluent
ssl.key.password=confluent
ssl.truststore.location=/home/training/rbac/security/tls/kafka/kafka.truststore.jks
ssl.truststore.password=confluent
ldap.java.naming.security.protocol = SSL
ldap.ssl.truststore.location = /home/training/rbac/security/tls/kafka/kafka.truststore.jks
ldap.ssl.truststore.password = confluent
confluent.metadata.server.ssl.keystore.location = /home/training/rbac/security/tls/mds/mds.keystore.p12
confluent.metadata.server.ssl.keystore.type = PKCS12
confluent.metadata.server.ssl.keystore.password = confluent
confluent.metadata.server.ssl.key.password = confluent
confluent.metadata.server.ssl.truststore.location=/home/training/rbac/security/tls/mds/mds.truststore.jks
confluent.metadata.server.ssl.truststore.password=confluent



# ----- REST Client Authorization via MDS Token Impersonation ----- #

authorizer.class.name=io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
confluent.authorizer.access.rule.providers=ZK_ACL,CONFLUENT
super.users=User:kafka;User:mds



# ----- Transport Encryption ----- #

# Blank










# ----- Miscellaneous ----- #

# These configurations are not the focus of these training materials.

broker.id=0
num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
log.dirs=/tmp/kafka-logs
log.retention.hours=168
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000
num.partitions=1
num.recovery.threads.per.data.dir=1
zookeeper.connect=localhost:2181
zookeeper.connection.timeout.ms=18000
transaction.state.log.min.isr=1
group.initial.rebalance.delay.ms=0
metric.reporters=io.confluent.metrics.reporter.ConfluentMetricsReporter
confluent.metrics.reporter.bootstrap.servers=localhost:9094
confluent.metrics.reporter.security.protocol=SASL_PLAINTEXT
confluent.metrics.reporter.sasl.mechanism=PLAIN
confluent.metrics.reporter.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
    username="kafka" \
    password="kafka-secret";
confluent.metrics.reporter.topic.replicas=1
confluent.support.metrics.enable=true
confluent.support.customer.id=anonymous
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
confluent.license.topic.replication.factor=1
confluent.metadata.topic.replication.factor=1